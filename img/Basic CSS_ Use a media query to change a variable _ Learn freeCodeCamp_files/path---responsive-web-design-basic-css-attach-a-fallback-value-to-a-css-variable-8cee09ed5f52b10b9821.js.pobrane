webpackJsonp([36683051643705],{4165:function(n,e){n.exports={data:{challengeNode:{title:"Attach a Fallback value to a CSS Variable",description:["When using your variable as a CSS property value, you can attach a fallback value that your browser will revert to if the given variable is invalid.","<strong>Note:</strong> This fallback is not used to increase browser compatibilty, and it will not work on IE browsers. Rather, it is used so that the browser has a color to display if it cannot find your variable.","Here's how you do it:","<blockquote>background: var(--penguin-skin, black);</blockquote>","This will set background to black if your variable wasn't set.","Note that this can be useful for debugging.","<hr>","It looks there is a problem with the variables supplied to the <code>.penguin-top</code> and <code>.penguin-bottom</code> classes. Rather than fix the typo, add a fallback value of <code>black</code> to the <code>background</code> property of the <code>.penguin-top</code> and <code>.penguin-bottom</code> classes."],challengeType:0,videoUrl:"https://scrimba.com/c/c6bDNfp",fields:{slug:"/responsive-web-design/basic-css/attach-a-fallback-value-to-a-css-variable",blockName:"Basic CSS",tests:[{text:"Apply the fallback value of <code>black</code> to the <code>background</code> property of the <code>penguin-top</code> class.",testString:"assert(code.match(/.penguin-top\\s*?{[\\s\\S]*background\\s*?:\\s*?var\\(\\s*?--pengiun-skin\\s*?,\\s*?black\\s*?\\)\\s*?;[\\s\\S]*}[\\s\\S]*.penguin-bottom\\s{/gi), 'Apply the fallback value of <code>black</code> to the <code>background</code> property of the <code>penguin-top</code> class.');"},{text:"Apply the fallback value of <code>black</code> to the <code>background</code> property of the <code>penguin-bottom</code> class.",testString:"assert(code.match(/.penguin-bottom\\s*?{[\\s\\S]*background\\s*?:\\s*?var\\(\\s*?--pengiun-skin\\s*?,\\s*?black\\s*?\\)\\s*?;[\\s\\S]*}/gi), 'Apply the fallback value of <code>black</code> to the <code>background</code> property of the <code>penguin-bottom</code> class.');"}]},required:[],files:{indexhtml:{key:"indexhtml",ext:"html",name:"index",contents:'<style>\n  .penguin {\n    --penguin-skin: black;\n    --penguin-belly: gray;\n    --penguin-beak: yellow;\n    position: relative;\n    margin: auto;\n    display: block;\n    margin-top: 5%;\n    width: 300px;\n    height: 300px;\n  }\n  \n  .penguin-top {\n    top: 10%;\n    left: 25%;\n  \n    /* change code below */\n    background: var(--pengiun-skin);\n    /* change code above */\n  \n    width: 50%;\n    height: 45%;\n    border-radius: 70% 70% 60% 60%;\n  }\n  \n  .penguin-bottom {\n    top: 40%;\n    left: 23.5%;\n  \n    /* change code below */\n    background: var(--pengiun-skin);\n    /* change code above */\n  \n    width: 53%;\n    height: 45%;\n    border-radius: 70% 70% 100% 100%;\n  }\n  \n  .right-hand {\n    top: 0%;\n    left: -5%;\n    background: var(--penguin-skin, black);\n    width: 30%;\n    height: 60%;\n    border-radius: 30% 30% 120% 30%;\n    transform: rotate(45deg);\n    z-index: -1;\n  }\n  \n  .left-hand {\n    top: 0%;\n    left: 75%;\n    background: var(--penguin-skin, black);\n    width: 30%;\n    height: 60%;\n    border-radius: 30% 30% 30% 120%;\n    transform: rotate(-45deg);\n    z-index: -1;\n  }\n  \n  .right-cheek {\n    top: 15%;\n    left: 35%;\n    background: var(--penguin-belly, white);\n    width: 60%;\n    height: 70%;\n    border-radius: 70% 70% 60% 60%;\n  }\n  \n  .left-cheek {\n    top: 15%;\n    left: 5%;\n    background: var(--penguin-belly, white);\n    width: 60%;\n    height: 70%;\n    border-radius: 70% 70% 60% 60%;\n  }\n  \n  .belly {\n    top: 60%;\n    left: 2.5%;\n    background: var(--penguin-belly, white);\n    width: 95%;\n    height: 100%;\n    border-radius: 120% 120% 100% 100%;\n  }\n  \n  .right-feet {\n    top: 85%;\n    left: 60%;\n    background: var(--penguin-beak, orange);\n    width: 15%;\n    height: 30%;\n    border-radius: 50% 50% 50% 50%;\n    transform: rotate(-80deg);\n    z-index: -2222;\n  }\n  \n  .left-feet {\n    top: 85%;\n    left: 25%;\n    background: var(--penguin-beak, orange);\n    width: 15%;\n    height: 30%;\n    border-radius: 50% 50% 50% 50%;\n    transform: rotate(80deg);\n    z-index: -2222;\n  }\n  \n  .right-eye {\n    top: 45%;\n    left: 60%;\n    background: black;\n    width: 15%;\n    height: 17%;\n    border-radius: 50%;\n  }\n  \n  .left-eye {\n    top: 45%;\n    left: 25%;\n    background: black;\n    width: 15%;\n    height: 17%;\n    border-radius: 50%;\n  }\n  \n  .sparkle {\n    top: 25%;\n    left: 15%;\n    background: white;\n    width: 35%;\n    height: 35%;\n    border-radius: 50%;\n  }\n  \n  .blush-right {\n    top: 65%;\n    left: 15%;\n    background: pink;\n    width: 15%;\n    height: 10%;\n    border-radius: 50%;\n  }\n  \n  .blush-left {\n    top: 65%;\n    left: 70%;\n    background: pink;\n    width: 15%;\n    height: 10%;\n    border-radius: 50%;\n  }\n  \n  .beak-top {\n    top: 60%;\n    left: 40%;\n    background: var(--penguin-beak, orange);\n    width: 20%;\n    height: 10%;\n    border-radius: 50%;\n  }\n  \n  .beak-bottom {\n    top: 65%;\n    left: 42%;\n    background: var(--penguin-beak, orange);\n    width: 16%;\n    height: 10%;\n    border-radius: 50%;\n  }\n  \n  body {\n    background:#c6faf1;\n  }\n  \n  .penguin * {\n    position: absolute;\n  }\n</style>\n<div class="penguin">\n  <div class="penguin-bottom">\n    <div class="right-hand"></div>\n    <div class="left-hand"></div>\n    <div class="right-feet"></div>\n    <div class="left-feet"></div>\n  </div>\n  <div class="penguin-top">\n    <div class="right-cheek"></div>\n    <div class="left-cheek"></div>\n    <div class="belly"></div>\n    <div class="right-eye">\n      <div class="sparkle"></div>\n    </div>\n    <div class="left-eye">\n      <div class="sparkle"></div>\n    </div>\n    <div class="blush-right"></div>\n    <div class="blush-left"></div>\n    <div class="beak-top"></div>\n    <div class="beak-bottom"></div>\n  </div>\n</div>',head:"",tail:""},indexjs:null,indexjsx:null}}},pathContext:{challengeMeta:{introPath:"",template:null,required:[],nextChallengePath:"/responsive-web-design/basic-css/improve-compatibility-with-browser-fallbacks",id:"5a9d7286424fe3d0e10cad13"},slug:"/responsive-web-design/basic-css/attach-a-fallback-value-to-a-css-variable"}}}});
//# sourceMappingURL=path---responsive-web-design-basic-css-attach-a-fallback-value-to-a-css-variable-8cee09ed5f52b10b9821.js.map